{"ast":null,"code":"import _slicedToArray from \"/Users/aziz/Documents/Aziz-Final-project-react-new-markdown-previewer-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aziz/Documents/Aziz-Final-project-react-new-markdown-previewer-hooks/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst placeholder = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`; // ALLOWS LINE BREAKS WITH RETURN BUTTON\n\nmarked.setOptions({\n  breaks: true\n});\n\nconst App = () => {\n  const _useState = useState(placeholder),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const handleTextAreaChange = event => {\n    setText(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    handleTextAreaChange: handleTextAreaChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Preview, {\n    text: text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }));\n};\n\nconst Editor = props => {\n  return React.createElement(\"textarea\", {\n    id: \"editor\",\n    style: {\n      width: \"60%\",\n      marginBottom: \"20px\"\n    },\n    rows: \"27\",\n    cols: \"120\",\n    value: props.text,\n    onChange: props.handleTextAreaChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  });\n};\n\nconst Preview = props => {\n  return React.createElement(\"div\", {\n    id: \"preview\",\n    style: {\n      background: 'cadetblue',\n      width: \"80%\",\n      height: \"700px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, props.text);\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/aziz/Documents/Aziz-Final-project-react-new-markdown-previewer-hooks/src/App.js"],"names":["React","useState","placeholder","marked","setOptions","breaks","App","text","setText","handleTextAreaChange","event","target","value","display","flexDirection","alignItems","Editor","props","width","marginBottom","Preview","background","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,OAAO,WAAP;AAEA,MAAMC,WAAW,GAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CADD,C,CA+CA;;AACAC,MAAM,CAACC,UAAP,CAAkB;AAChBC,EAAAA,MAAM,EAAE;AADQ,CAAlB;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACQL,QAAQ,CAACC,WAAD,CADhB;AAAA;AAAA,QACTK,IADS;AAAA,QACHC,OADG;;AAGhB,QAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpCF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,aAAa,EAAE,QAAjC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,oBAAoB,EAAEN,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAbD;;AAeA,MAAMS,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AACI,IAAA,EAAE,EAAC,QADP;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KAFX;AAGI,IAAA,IAAI,EAAC,IAHT;AAII,IAAA,IAAI,EAAC,KAJT;AAKI,IAAA,KAAK,EAAEF,KAAK,CAACV,IALjB;AAMI,IAAA,QAAQ,EAAEU,KAAK,CAACR,oBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAUD,CAXD;;AAaA,MAAMW,OAAO,GAAIH,KAAD,IAAW;AACzB,SACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,KAAK,EAAE;AAAEI,MAAAA,UAAU,EAAE,WAAd;AAA2BH,MAAAA,KAAK,EAAE,KAAlC;AAAyCI,MAAAA,MAAM,EAAC;AAAhD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACV,IADT,CADF;AAKD,CAND;;AAQA,eAAeD,GAAf","sourcesContent":["import React , {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst placeholder =\n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n// ALLOWS LINE BREAKS WITH RETURN BUTTON\nmarked.setOptions({\n  breaks: true,\n});\n\nconst App = () => {\n  const [text, setText] = useState(placeholder);\n\n  const handleTextAreaChange = event => {\n    setText(event.target.value)\n  };\n\n  return (\n    <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n      <Editor handleTextAreaChange={handleTextAreaChange}/>\n      <Preview text={text}/>\n    </div>\n    )\n}\n\nconst Editor = (props) => {\n  return (\n    <textarea\n        id=\"editor\"\n        style={{ width: \"60%\", marginBottom: \"20px\" }}\n        rows=\"27\"\n        cols=\"120\"\n        value={props.text}\n        onChange={props.handleTextAreaChange}\n      />\n   )\n}\n\nconst Preview = (props) => {\n  return (\n    <div id=\"preview\" style={{ background: 'cadetblue', width: \"80%\", height:\"700px\"}}>\n      {props.text}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}